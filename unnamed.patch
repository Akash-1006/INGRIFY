Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
new file mode 100644
--- /dev/null	(date 1748009727997)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1748009727997)
@@ -0,0 +1,168 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#FFFFFF"
+    tools:context=".HomeFragment">
+
+    <ImageView
+        android:id="@+id/iv_ingrify_logo_home"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:src="@drawable/ic_ingrify_logo"
+        android:contentDescription="@string/app_logo_description"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        android:layout_marginStart="16dp"
+        android:layout_marginTop="16dp" />
+
+    <TextView
+        android:id="@+id/tv_ingrify_name_home"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/app_name_ingrify"
+        android:textColor="@color/black"
+        android:textSize="24sp"
+        android:textStyle="bold"
+        android:fontFamily="@font/poppins_bold"
+        app:layout_constraintStart_toEndOf="@+id/iv_ingrify_logo_home"
+        app:layout_constraintTop_toTopOf="@+id/iv_ingrify_logo_home"
+        app:layout_constraintBottom_toBottomOf="@+id/iv_ingrify_logo_home"
+        android:layout_marginStart="8dp" />
+
+    <TextView
+        android:id="@+id/tv_welcome_message"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:text="@string/welcome_message"
+        android:textColor="@color/black"
+        android:textSize="28sp"
+        android:textStyle="bold"
+        android:fontFamily="@font/poppins_bold"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/tv_ingrify_name_home"
+        android:layout_marginStart="16dp"
+        android:layout_marginEnd="16dp"
+        android:layout_marginTop="32dp" />
+
+    <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:gravity="center"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/tv_welcome_message"
+        android:layout_marginTop="48dp"
+        android:paddingStart="16dp"
+        android:paddingEnd="16dp">
+
+        <com.google.android.material.card.MaterialCardView
+            android:id="@+id/card_scan"
+            android:layout_width="0dp"
+            android:layout_height="120dp"
+            android:layout_weight="1"
+            android:layout_marginEnd="8dp"
+            app:cardCornerRadius="16dp"
+            app:cardElevation="4dp"
+            app:cardBackgroundColor="@color/white"
+            android:clickable="true"
+            android:focusable="true">
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical"
+                android:gravity="center">
+                <ImageView
+                    android:layout_width="48dp"
+                    android:layout_height="48dp"
+                    android:src="@drawable/ic_scan_card"
+                    android:contentDescription="@string/scan_card_title"
+                    android:background="@drawable/circle_background_blue_light"
+                    android:padding="8dp" />
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="@string/scan_card_title"
+                    android:textColor="@color/black"
+                    android:textSize="14sp"
+                    android:fontFamily="@font/poppins_regular"
+                    android:layout_marginTop="8dp" />
+            </LinearLayout>
+        </com.google.android.material.card.MaterialCardView>
+
+        <com.google.android.material.card.MaterialCardView
+            android:id="@+id/card_search"
+            android:layout_width="0dp"
+            android:layout_height="120dp"
+            android:layout_weight="1"
+            android:layout_marginStart="4dp"
+            android:layout_marginEnd="4dp"
+            app:cardCornerRadius="16dp"
+            app:cardElevation="4dp"
+            app:cardBackgroundColor="@color/white"
+            android:clickable="true"
+            android:focusable="true">
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical"
+                android:gravity="center">
+                <ImageView
+                    android:layout_width="48dp"
+                    android:layout_height="48dp"
+                    android:src="@drawable/ic_search_card"
+                    android:contentDescription="@string/search_card_title"
+                    android:background="@drawable/circle_background_blue_light"
+                    android:padding="8dp" />
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="@string/search_card_title"
+                    android:textColor="@color/black"
+                    android:textSize="14sp"
+                    android:fontFamily="@font/poppins_regular"
+                    android:layout_marginTop="8dp" />
+            </LinearLayout>
+        </com.google.android.material.card.MaterialCardView>
+
+        <com.google.android.material.card.MaterialCardView
+            android:id="@+id/card_allergen"
+            android:layout_width="0dp"
+            android:layout_height="120dp"
+            android:layout_weight="1"
+            android:layout_marginStart="8dp"
+            app:cardCornerRadius="16dp"
+            app:cardElevation="4dp"
+            app:cardBackgroundColor="@color/white"
+            android:clickable="true"
+            android:focusable="true">
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical"
+                android:gravity="center">
+                <ImageView
+                    android:layout_width="48dp"
+                    android:layout_height="48dp"
+                    android:src="@drawable/ic_allergen_card"
+                    android:contentDescription="@string/allergen_card_title"
+                    android:background="@drawable/circle_background_blue_light"
+                    android:padding="8dp" />
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="@string/allergen_card_title"
+                    android:textColor="@color/black"
+                    android:textSize="14sp"
+                    android:fontFamily="@font/poppins_regular"
+                    android:layout_marginTop="8dp" />
+            </LinearLayout>
+        </com.google.android.material.card.MaterialCardView>
+
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	(date 1748009772744)
@@ -21,4 +21,9 @@
     <string name="login_title">LOGIN</string>
     <string name="hint_password">Password</string>
     <string name="button_login_submit">Login</string>
+
+    <string name="welcome_message">Welcome back, User!!</string>
+    <string name="scan_card_title">Scan</string>
+    <string name="search_card_title">Search</string>
+    <string name="allergen_card_title">Allergen</string>
 </resources>
Index: app/src/main/res/drawable/ic_scan_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_scan_card.xml b/app/src/main/res/drawable/ic_scan_card.xml
new file mode 100644
--- /dev/null	(date 1748015216598)
+++ b/app/src/main/res/drawable/ic_scan_card.xml	(date 1748015216598)
@@ -0,0 +1,7 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#000000" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">
+      
+    <path android:fillColor="@android:color/white" android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0"/>
+      
+    <path android:fillColor="@android:color/white" android:pathData="M9,2L7.17,4L4,4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2L22,6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2L9,2zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z"/>
+    
+</vector>
Index: app/src/main/res/drawable/ic_search_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_search_card.xml b/app/src/main/res/drawable/ic_search_card.xml
new file mode 100644
--- /dev/null	(date 1748015244992)
+++ b/app/src/main/res/drawable/ic_search_card.xml	(date 1748015244992)
@@ -0,0 +1,5 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#000000" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">
+      
+    <path android:fillColor="@android:color/white" android:pathData="M15.5,14h-0.79l-0.28,-0.27C15.41,12.59 16,11.11 16,9.5 16,5.91 13.09,3 9.5,3S3,5.91 3,9.5 5.91,16 9.5,16c1.61,0 3.09,-0.59 4.23,-1.57l0.27,0.28v0.79l5,4.99L20.49,19l-4.99,-5zM9.5,14C7.01,14 5,11.99 5,9.5S7.01,5 9.5,5 14,7.01 14,9.5 11.99,14 9.5,14z"/>
+    
+</vector>
Index: app/src/main/res/drawable/ic_allergen_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_allergen_card.xml b/app/src/main/res/drawable/ic_allergen_card.xml
new file mode 100644
--- /dev/null	(date 1748015264760)
+++ b/app/src/main/res/drawable/ic_allergen_card.xml	(date 1748015264760)
@@ -0,0 +1,5 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#000000" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">
+      
+    <path android:fillColor="@android:color/white" android:pathData="M11,15h2v2h-2zM11,7h2v6h-2zM11.99,2C6.47,2 2,6.48 2,12s4.47,10 9.99,10C17.52,22 22,17.52 22,12S17.52,2 11.99,2zM12,20c-4.42,0 -8,-3.58 -8,-8s3.58,-8 8,-8 8,3.58 8,8 -3.58,8 -8,8z"/>
+    
+</vector>
Index: app/src/main/res/drawable/circle_background_blue_light.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/circle_background_blue_light.xml b/app/src/main/res/drawable/circle_background_blue_light.xml
new file mode 100644
--- /dev/null	(date 1748013507671)
+++ b/app/src/main/res/drawable/circle_background_blue_light.xml	(date 1748013507671)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="#E3F2FD" /> </shape>
Index: app/src/main/java/com/ingrify/app/ApiService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/ApiService.kt b/app/src/main/java/com/ingrify/app/ApiService.kt
new file mode 100644
--- /dev/null	(date 1748015065055)
+++ b/app/src/main/java/com/ingrify/app/ApiService.kt	(date 1748015065055)
@@ -0,0 +1,22 @@
+package com.ingrify.app
+
+import retrofit2.Response
+import retrofit2.http.Body
+import retrofit2.http.GET
+import retrofit2.http.Header
+import retrofit2.http.POST
+
+interface ApiService {
+
+    // Example login endpoint (adjust to your actual endpoint)
+    @POST("api/login") // Replace with your actual login endpoint path
+    suspend fun loginUser(@Body request: LoginRequest): Response<LoginResponse>
+
+    // Example signup endpoint (adjust to your actual endpoint)
+    @POST("api/signup") // Replace with your actual signup endpoint path
+    suspend fun registerUser(@Body request: RegisterRequest): Response<LoginResponse> // Assuming signup also returns a token
+
+    // Endpoint to get user profile, requires an Authorization header
+    @GET("api/user/profile") // Replace with your actual user profile endpoint path
+    suspend fun getUserProfile(@Header("Authorization") token: String): Response<UserProfileResponse>
+}
Index: app/src/main/java/com/ingrify/app/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/HomeFragment.kt b/app/src/main/java/com/ingrify/app/HomeFragment.kt
new file mode 100644
--- /dev/null	(date 1748014164367)
+++ b/app/src/main/java/com/ingrify/app/HomeFragment.kt	(date 1748014164367)
@@ -0,0 +1,78 @@
+package com.ingrify.app
+
+import android.os.Bundle
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import android.widget.Toast
+import androidx.lifecycle.lifecycleScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
+import com.ingrify.app.UserSessionManager
+import com.ingrify.app.RetrofitClient // <--- ADD THIS IMPORT
+import com.ingrify.app.ApiService // This might not be strictly needed if only using RetrofitClient.apiService
+
+class HomeFragment : Fragment() {
+
+    private lateinit var welcomeMessageTextView: TextView
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        return inflater.inflate(R.layout.fragment_home, container, false)
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        welcomeMessageTextView = view.findViewById(R.id.tv_welcome_message)
+
+        fetchUserProfile()
+    }
+
+    private fun fetchUserProfile() {
+        val authToken = UserSessionManager.getAuthToken()
+
+        if (authToken.isNullOrEmpty()) {
+            welcomeMessageTextView.text = "Welcome back, Guest!!"
+            Toast.makeText(context, "Please log in to personalize your experience.", Toast.LENGTH_LONG).show()
+            return
+        }
+
+        val authHeader = "Bearer $authToken"
+
+        lifecycleScope.launch(Dispatchers.IO) {
+            try {
+                val response = RetrofitClient.apiService.getUserProfile(authHeader)
+
+                withContext(Dispatchers.Main) {
+                    if (response.isSuccessful && response.body() != null) {
+                        val userProfile = response.body()
+                        val userName = userProfile?.name
+                        if (!userName.isNullOrEmpty()) {
+                            welcomeMessageTextView.text = "Welcome back, ${userName}!!"
+                            UserSessionManager.saveUserName(userName)
+                        } else {
+                            welcomeMessageTextView.text = "Welcome back, User!!"
+                            Toast.makeText(context, "User name not found in profile.", Toast.LENGTH_SHORT).show()
+                        }
+                    } else {
+                        val errorBody = response.errorBody()?.string()
+                        welcomeMessageTextView.text = "Welcome back, User!!"
+                        Toast.makeText(context, "Failed to fetch profile: ${errorBody ?: response.message()}", Toast.LENGTH_LONG).show()
+                    }
+                }
+            } catch (e: Exception) {
+                withContext(Dispatchers.Main) {
+                    welcomeMessageTextView.text = "Welcome back, User!!"
+                    Toast.makeText(context, "Network error fetching profile: ${e.message}", Toast.LENGTH_LONG).show()
+                    e.printStackTrace()
+                }
+            }
+        }
+    }
+}
Index: app/src/main/java/com/ingrify/app/LoginRequest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/LoginRequest.kt b/app/src/main/java/com/ingrify/app/LoginRequest.kt
new file mode 100644
--- /dev/null	(date 1748008971658)
+++ b/app/src/main/java/com/ingrify/app/LoginRequest.kt	(date 1748008971658)
@@ -0,0 +1,10 @@
+package com.ingrify.app
+
+import com.google.gson.annotations.SerializedName
+
+data class LoginRequest(
+    @SerializedName("username")
+    val username: String,
+    @SerializedName("password")
+    val password: String
+)
Index: app/src/main/java/com/ingrify/app/LoginResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/LoginResponse.kt b/app/src/main/java/com/ingrify/app/LoginResponse.kt
new file mode 100644
--- /dev/null	(date 1748008428325)
+++ b/app/src/main/java/com/ingrify/app/LoginResponse.kt	(date 1748008428325)
@@ -0,0 +1,13 @@
+package com.ingrify.app
+
+import com.google.gson.annotations.SerializedName
+
+// This data class should match the structure of your login/signup API response
+data class LoginResponse(
+    @SerializedName("message") // e.g., "Login successful", "User registered"
+    val message: String,
+    @SerializedName("token") // This is crucial: the authentication token from your backend
+    val token: String,
+    @SerializedName("user_name") // Assuming your backend returns the user's name upon login/signup
+    val userName: String? = null // It's good practice for the API to return the name immediately
+)
Index: app/src/main/java/com/ingrify/app/RetrofitClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/RetrofitClient.kt b/app/src/main/java/com/ingrify/app/RetrofitClient.kt
new file mode 100644
--- /dev/null	(date 1748008536414)
+++ b/app/src/main/java/com/ingrify/app/RetrofitClient.kt	(date 1748008536414)
@@ -0,0 +1,35 @@
+package com.ingrify.app
+
+import okhttp3.OkHttpClient
+import okhttp3.logging.HttpLoggingInterceptor
+import retrofit2.Retrofit
+import retrofit2.converter.gson.GsonConverterFactory
+import java.util.concurrent.TimeUnit
+
+object RetrofitClient {
+
+    // IMPORTANT: Replace with your actual backend URL
+    // For emulator testing: use 10.0.2.2 for localhost on your machine
+    // For real device testing: use your machine's local IP address (e.g., http://192.168.1.X:8000/)
+    private const val BASE_URL = "http://10.0.2.2:8000/" // Example: your Python backend URL
+
+    private val logging = HttpLoggingInterceptor().apply {
+        level = HttpLoggingInterceptor.Level.BODY // Log request and response bodies
+    }
+
+    private val okHttpClient = OkHttpClient.Builder()
+        .addInterceptor(logging)
+        .connectTimeout(30, TimeUnit.SECONDS) // Adjust timeouts as needed
+        .readTimeout(30, TimeUnit.SECONDS)
+        .writeTimeout(30, TimeUnit.SECONDS)
+        .build()
+
+    val apiService: ApiService by lazy {
+        Retrofit.Builder()
+            .baseUrl(BASE_URL)
+            .client(okHttpClient)
+            .addConverterFactory(GsonConverterFactory.create())
+            .build()
+            .create(ApiService::class.java)
+    }
+}
Index: app/src/main/java/com/ingrify/app/RegisterRequest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/RegisterRequest.kt b/app/src/main/java/com/ingrify/app/RegisterRequest.kt
new file mode 100644
--- /dev/null	(date 1748008971672)
+++ b/app/src/main/java/com/ingrify/app/RegisterRequest.kt	(date 1748008971672)
@@ -0,0 +1,14 @@
+package com.ingrify.app
+
+import com.google.gson.annotations.SerializedName
+
+data class RegisterRequest(
+    @SerializedName("name") // Assuming your backend takes a 'name' field for registration
+    val name: String,
+    @SerializedName("age")
+    val age: Int, // Assuming age is an integer
+    @SerializedName("username")
+    val username: String,
+    @SerializedName("password")
+    val password: String
+)
Index: app/src/main/java/com/ingrify/app/UserSessionManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/UserSessionManager.kt b/app/src/main/java/com/ingrify/app/UserSessionManager.kt
new file mode 100644
--- /dev/null	(date 1748015065062)
+++ b/app/src/main/java/com/ingrify/app/UserSessionManager.kt	(date 1748015065062)
@@ -0,0 +1,43 @@
+package com.ingrify.app
+import android.content.Context
+import android.content.SharedPreferences
+
+object UserSessionManager {
+
+    private const val PREF_NAME = "IngrifyUserSession"
+    private const val KEY_USER_NAME = "userName" // For displaying immediately from login/signup response
+    private const val KEY_AUTH_TOKEN = "authToken" // NEW: To store the authentication token
+
+    private lateinit var sharedPreferences: SharedPreferences
+
+    fun init(context: Context) {
+        sharedPreferences = context.applicationContext.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE)
+    }
+
+    fun saveUserName(name: String) {
+        sharedPreferences.edit().putString(KEY_USER_NAME, name).apply()
+    }
+
+    fun getUserName(): String? {
+        return sharedPreferences.getString(KEY_USER_NAME, null)
+    }
+
+    // NEW: Save authentication token
+    fun saveAuthToken(token: String) {
+        sharedPreferences.edit().putString(KEY_AUTH_TOKEN, token).apply()
+    }
+
+    // NEW: Get authentication token
+    fun getAuthToken(): String? {
+        return sharedPreferences.getString(KEY_AUTH_TOKEN, null)
+    }
+
+    // NEW: Check if user is logged in (based on token presence)
+    fun isLoggedIn(): Boolean {
+        return !getAuthToken().isNullOrEmpty()
+    }
+
+    fun clearSession() {
+        sharedPreferences.edit().clear().apply()
+    }
+}
Index: app/src/main/java/com/ingrify/app/UserProfileResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/UserProfileResponse.kt b/app/src/main/java/com/ingrify/app/UserProfileResponse.kt
new file mode 100644
--- /dev/null	(date 1748015389689)
+++ b/app/src/main/java/com/ingrify/app/UserProfileResponse.kt	(date 1748015389689)
@@ -0,0 +1,15 @@
+package com.ingrify.app
+
+import com.google.gson.annotations.SerializedName
+
+// This data class should match the structure of your user profile API response
+data class UserProfileResponse(
+    @SerializedName("name") // Use @SerializedName if your JSON key is different from your variable name
+    val name: String,
+    @SerializedName("age") // Use @SerializedName if your JSON key is different from your variable name
+    val age: String,
+    @SerializedName("username")
+    val username: String,
+    @SerializedName("password")
+    val password: String
+)
Index: app/src/main/java/com/ingrify/app/HomeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/HomeActivity.kt b/app/src/main/java/com/ingrify/app/HomeActivity.kt
--- a/app/src/main/java/com/ingrify/app/HomeActivity.kt	
+++ b/app/src/main/java/com/ingrify/app/HomeActivity.kt	(date 1748013755620)
@@ -1,7 +1,9 @@
 package com.ingrify.app
+
 import android.os.Bundle
 import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
 import com.google.android.material.bottomnavigation.BottomNavigationView
 
 class HomeActivity : AppCompatActivity() {
@@ -12,26 +14,30 @@
 
         val bottomNavigationView: BottomNavigationView = findViewById(R.id.bottom_navigation)
 
+        // Set initial fragment when activity is created
+        if (savedInstanceState == null) {
+            loadFragment(HomeFragment())
+        }
+
         bottomNavigationView.setOnItemSelectedListener { item ->
             when (item.itemId) {
                 R.id.navigation_home -> {
-                    Toast.makeText(this, "Home clicked!", Toast.LENGTH_SHORT).show()
-                    // Replace with actual fragment transaction for Home
+                    loadFragment(HomeFragment())
                     true
                 }
                 R.id.navigation_scan -> {
                     Toast.makeText(this, "Scan clicked!", Toast.LENGTH_SHORT).show()
-                    // Replace with actual fragment transaction for Scan
+                    // loadFragment(ScanFragment()) // You would create and load this fragment for Scan
                     true
                 }
                 R.id.navigation_search -> {
                     Toast.makeText(this, "Search clicked!", Toast.LENGTH_SHORT).show()
-                    // Replace with actual fragment transaction for Search
+                    // loadFragment(SearchFragment()) // You would create and load this fragment for Search
                     true
                 }
                 R.id.navigation_profile -> {
                     Toast.makeText(this, "Profile clicked!", Toast.LENGTH_SHORT).show()
-                    // Replace with actual fragment transaction for Profile
+                    // loadFragment(ProfileFragment()) // You would create and load this fragment for Profile
                     true
                 }
                 else -> false
@@ -41,4 +47,10 @@
         // Set default selected item (e.g., Home)
         bottomNavigationView.selectedItemId = R.id.navigation_home
     }
+
+    private fun loadFragment(fragment: Fragment) {
+        supportFragmentManager.beginTransaction()
+            .replace(R.id.fragment_container, fragment)
+            .commit()
+    }
 }
Index: app/src/main/java/com/ingrify/app/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/LoginActivity.kt b/app/src/main/java/com/ingrify/app/LoginActivity.kt
--- a/app/src/main/java/com/ingrify/app/LoginActivity.kt	
+++ b/app/src/main/java/com/ingrify/app/LoginActivity.kt	(date 1748014043306)
@@ -7,6 +7,7 @@
 import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
 import com.google.android.material.textfield.TextInputEditText
+import com.ingrify.app.LoginRequest
 
 class LoginActivity : AppCompatActivity() {
 
Index: app/src/main/java/com/ingrify/app/SignUpActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ingrify/app/SignUpActivity.kt b/app/src/main/java/com/ingrify/app/SignUpActivity.kt
--- a/app/src/main/java/com/ingrify/app/SignUpActivity.kt	
+++ b/app/src/main/java/com/ingrify/app/SignUpActivity.kt	(date 1748015405998)
@@ -7,7 +7,11 @@
 import android.widget.TextView
 import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
-import com.google.android.material.textfield.TextInputEditText
+import androidx.lifecycle.lifecycleScope // For coroutines
+import com.google.android.material.textfield.TextInputLayout
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
 
 class SignUpActivity : AppCompatActivity() {
 
@@ -15,49 +19,84 @@
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_sign_up)
 
-        // Find views by their IDs
         val backButton: ImageView = findViewById(R.id.iv_back_button)
-        val etName: TextInputEditText = findViewById(R.id.et_name)
-        val etAge: TextInputEditText = findViewById(R.id.et_age)
-        val etUsername: TextInputEditText = findViewById(R.id.et_username)
-        val etCreatePassword: TextInputEditText = findViewById(R.id.et_create_password)
-        val etConfirmPassword: TextInputEditText = findViewById(R.id.et_confirm_password)
+        val tilName: TextInputLayout = findViewById(R.id.til_name)
+        val tilAge: TextInputLayout = findViewById(R.id.til_age)
+        val tilUsername: TextInputLayout = findViewById(R.id.til_username)
+        val tilCreatePassword: TextInputLayout = findViewById(R.id.til_create_password)
+        val tilConfirmPassword: TextInputLayout = findViewById(R.id.til_confirm_password)
         val signUpButton: Button = findViewById(R.id.btn_signup_submit)
         val loginLink: TextView = findViewById(R.id.tv_login_link)
 
-        // Set click listener for the back button
         backButton.setOnClickListener {
-            onBackPressedDispatcher.onBackPressed() // Go back to the previous activity
+            onBackPressedDispatcher.onBackPressed()
         }
 
-        // Set click listener for the Sign Up button
         signUpButton.setOnClickListener {
-            val name = etName.text.toString().trim()
-            val age = etAge.text.toString().trim()
-            val username = etUsername.text.toString().trim()
-            val createPassword = etCreatePassword.text.toString()
-            val confirmPassword = etConfirmPassword.text.toString()
+            val name = tilName.editText?.text.toString().trim()
+            val ageString = tilAge.editText?.text.toString().trim()
+            val username = tilUsername.editText?.text.toString().trim()
+            val createPassword = tilCreatePassword.editText?.text.toString().trim()
+            val confirmPassword = tilConfirmPassword.editText?.text.toString().trim()
 
             // Basic validation
-            if (name.isEmpty() || age.isEmpty() || username.isEmpty() || createPassword.isEmpty() || confirmPassword.isEmpty()) {
+            if (name.isEmpty() || ageString.isEmpty() || username.isEmpty() || createPassword.isEmpty() || confirmPassword.isEmpty()) {
                 Toast.makeText(this, "Please fill all fields", Toast.LENGTH_SHORT).show()
-            } else if (createPassword != confirmPassword) {
+                return@setOnClickListener
+            }
+
+            if (createPassword != confirmPassword) {
                 Toast.makeText(this, "Passwords do not match", Toast.LENGTH_SHORT).show()
-            } else {
-                // Here you would typically send data to a backend for user registration
-                Toast.makeText(this, "Sign Up successful for $username!", Toast.LENGTH_LONG).show()
-                // For now, let's navigate to MainActivity after successful sign-up
-                val intent = Intent(this, MainActivity::class.java)
-                startActivity(intent)
-                finish() // Finish SignUpActivity so user cannot go back
+                return@setOnClickListener
+            }
+
+            val age = ageString.toIntOrNull()
+            if (age == null) {
+                Toast.makeText(this, "Please enter a valid age", Toast.LENGTH_SHORT).show()
+                return@setOnClickListener
+            }
+
+            // Perform API call for registration
+            lifecycleScope.launch(Dispatchers.IO) {
+                try {
+                    val request = RegisterRequest(name, age, username, createPassword)
+                    val response = RetrofitClient.apiService.registerUser(request)
+
+                    withContext(Dispatchers.Main) {
+                        if (response.isSuccessful && response.body() != null) {
+                            val loginResponse = response.body()
+                            val token = loginResponse?.token
+                            val returnedUserName = loginResponse?.userName // Get name from response if provided
+
+                            if (token != null) {
+                                UserSessionManager.saveAuthToken(token)
+                                // If backend didn't send name, use the one from input for immediate display
+                                UserSessionManager.saveUserName(returnedUserName ?: name)
+                                Toast.makeText(this@SignUpActivity, loginResponse.message, Toast.LENGTH_SHORT).show()
+                                val intent = Intent(this@SignUpActivity, HomeActivity::class.java)
+                                startActivity(intent)
+                                finish()
+                            } else {
+                                Toast.makeText(this@SignUpActivity, "Registration successful, but no token received.", Toast.LENGTH_LONG).show()
+                            }
+                        } else {
+                            val errorBody = response.errorBody()?.string()
+                            Toast.makeText(this@SignUpActivity, "Registration failed: ${errorBody ?: response.message()}", Toast.LENGTH_LONG).show()
+                        }
+                    }
+                } catch (e: Exception) {
+                    withContext(Dispatchers.Main) {
+                        Toast.makeText(this@SignUpActivity, "Network error: ${e.message}", Toast.LENGTH_LONG).show()
+                        e.printStackTrace()
+                    }
+                }
             }
         }
 
-        // Set click listener for the Login link
         loginLink.setOnClickListener {
             val intent = Intent(this, LoginActivity::class.java)
             startActivity(intent)
-            finish() // Finish SignUpActivity
+            finish()
         }
     }
 }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	(date 1748008018086)
@@ -2,6 +2,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
     <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.CAMERA" />
 
     <application
         android:allowBackup="true"
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	
+++ b/app/build.gradle.kts	(date 1748008792320)
@@ -47,9 +47,9 @@
     androidTestImplementation(libs.androidx.espresso.core)
 
     // NEW: Retrofit for networking
-    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
+    implementation("com.squareup.retrofit2:retrofit:2.9.0")
     // NEW: Gson converter for JSON parsing
-    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
+    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
     // NEW: OkHttp logging interceptor (optional, but very useful for debugging)
-    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
+    implementation("com.squareup.okhttp3:logging-interceptor:4.11.0")
 }
\ No newline at end of file
